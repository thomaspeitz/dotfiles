alias ber="bundle exec rspec --color --order rand"
alias glop="git log -30 --graph --pretty=format:'%h %ad %s (%an)' --date=short"
alias md5sum="md5 -r"
cg () { cd ~/git/$1 }
cgt () { cd ~/git/thomas/ }

b () { bundle install }

alias tf="terraform"
alias tfp="terraform plan -out .plan"
alias tfa="terraform apply .plan"
alias tfi="terraform init"

for kubectl in k k2
do
  for c in staging production infra thomas logging experiment
  do
    if [ $kubectl = "k2" ]
    then
      c="${c}-new"
    fi

    alias ${kubectl}${c:0:1}="kubectl --context ${c}"

    for ns in default monitoring kube-system "nginx-ingress" oauth "cert-manager" velero
    do
      shortcut=""
      namespace=""

      if [ "$ns" != "default" ]
      then
        shortcut=${ns:0:1}
        namespace="--namespace ${ns}"
      fi

      alias ${kubectl}${c:0:1}${shortcut}="kubectl --context ${c} $namespace"
      alias ${kubectl}${c:0:1}${shortcut}gp="kubectl --context ${c} $namespace get po"
      alias ${kubectl}${c:0:1}${shortcut}dp="kubectl --context ${c} $namespace describe po"
      alias ${kubectl}${c:0:1}${shortcut}l="kubectl --context ${c} $namespace logs"
      alias ${kubectl}${c:0:1}${shortcut}e="kubectl --context ${c} $namespace exec -it"
      alias ${kubectl}${c:0:1}${shortcut}p="kubectl --context ${c} $namespace port-forward"
    done
  done
done

alias kt="kubectl --context thomas"

alias curl="/usr/bin/curl -A \"Thomas Macbook\" $@"

cortex () { echo "WATCH OUT - YOU ARE ON $1";kubectl --context $1 exec -it $(kubectl --context $1 get pods -l name=cortex-injixo -o jsonpath="{.items[].metadata.name}") -c cortex-injixo bundle exec rails c }

support () { echo "WATCH OUT - YOU ARE ON $1";kubectl --context $1 exec -it $(kubectl --context $1 get pods -l name=support -o jsonpath="{.items[].metadata.name}") -c support bundle exec rails c }

alias kubesec-encrypt="kubesec encrypt --key=75B240BE8E2FB53C7DCA4CF478711674974C8F23 --key=5E0832A41DCD0FB11C07EF2F9E58C64809FA6916"

alias kubesec-encrypt-private="kubesec encrypt --key=75B240BE8E2FB53C7DCA4CF478711674974C8F23"

kubesec-reencrypt() { kubesec decrypt ${1} > ${1/yml.crypt/yml}; kubesec-encrypt ${1/yml.crypt/yml} > ${1} ;rm ${1/yml.crypt/yml} }

# Allow alias watching
alias watch='watch '

dockertags () {
    local image="${1}"

    wget -q https://registry.hub.docker.com/v1/repositories/"${image}"/tags -O - \
        | tr -d '[]" ' | tr '}' '\n' | awk -F: '{print $3}'
}
